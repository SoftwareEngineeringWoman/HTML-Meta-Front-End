Flexbox:Flexbox is single-dimensional, which means you can align it either along a row or a column and it is set to row alignment by default. 
<body>
  <div class="flex-container">
    <div class="box box1">  One..</div>
align-self:
This property can be used on individual items inside the flex. 
.flex-container{
    display: flex;
    justify-content: center;
    flex-direction: column;
    flex-wrap: wrap;
    align-items:flex-end;
/*flex-flow: row wrap;*/
}
.box3{
    background-color: blanchedalmond;
    align-self: center;
}

flex-direction: row | row-reverse | column | column-reverse

flex-wrap property specifies whether the flex items should wrap or not, if there is not enough room for them on one flex line.
nowrap, wrap, wrap-reverse

justify-content property is used to align the flex items when they do not use all available space on the main-axis (horizontally).
center, flex-start, flex-end, space-around, space-between, space-evenly

align-items property is used to align the flex items when they do not use all available space on the cross-axis (vertically).
center, flex-start, flex-end, stretch, baseline, normal

The align-content property is used to align the flex lines.
center, stretch, flex-start, flex-end, space-around, space-between, space-evenly
In the following examples we use a 600 pixels high container, with the flex-wrap property set to wrap, to better demonstrate the align-content property.
.flex-container {
  display: flex;
  height: 600px;
  flex-wrap: wrap;
  align-content: center;
}


CSS Flex Items:
order:The order property specifies the order of the flex items inside the flex container.The order value must be a number, default value is 0.
<div class="flex-container">
  <div style="order: 3">1</div>
flex-grow:The flex-grow property specifies how much a flex item will grow relative to the rest of the flex items.The value must be a number, default value is 0.
<div class="flex-container">
  <div style="flex-grow: 1">1</div>
flex-shrink:The flex-shrink property specifies how much a flex item will shrink relative to the rest of the flex items.The value must be a number, default value is 1.
<div class="flex-container">
  <div>1</div>
  <div>2</div>
  <div style="flex-shrink: 0">3</div>
  <div>4</div>
flex-basis:The flex-basis property specifies the initial length of a flex item.
<div style="flex-basis: 200px">3</div>
flex:The flex property is a shorthand property for the flex-grow, flex-shrink, and flex-basis properties.
 <div style="flex: 0 0 200px">3</div> /*not growable (0), not shrinkable (0), and with an initial length of 200 pixels:*/
align-self:The align-self property specifies the alignment for the selected item inside the flexible container.
  <div style="align-self: center">3</div>
----------------------------------------
Responsive Flexbox
For example, if you want to create a two-column layout for most screen sizes, and a one-column layout for small screen sizes (such as phones and tablets), you can change the flex-direction from row to column at a specific breakpoint (800px in the example below):
.flex-container {
  display: flex;
  flex-direction: row;
}

/* Responsive layout - makes a one column layout instead of a two-column layout */
@media (max-width: 800px) {
  .flex-container {
    flex-direction: column;
  }
}
-----------------------------------------
CSS Grids
gap:
gap property can be used to create space between the items along the main axis. You can also individually configure the gaps in rows and columns using row-gap and column-gap properties.   

Justification and alignment
justify-self: start | center | end | stretch
Determines how  an item is positioned inside its aligned container in relation to the appropriate axis. 

align-self: start | center | end | stretch
Aligns an item within a grid area. 

place-self: start | stretch /* shorthand for two properties above */
This setting lets one align and justify an item within a block. 

Alignment
justify-items: start | center | end | stretch
Defines the default space that is allot to each item on the grid 

align-items: start | center | end | stretch
Defines the default space related to an item along the grid’s block axis  

place-items: start | stretch /* shorthand for two properties above */
This feature allows you align items with  the block and inline directions.

Justification
justify-content: start | center | end | stretch | space-between | space-evenly | space-around
Defines browser allocation of space to content items in relation to the main-axis 

align-content: start | center | end | stretch | space-between | space-evenly | space-around
Defines browser allocation of space to content items in relation to cross axis and block axis  

place-content: center | start
This feature allows you align items with  the block and inline directions.

Positioning
grid-auto-flow: row | column | dense
This relates to how the items are placed automatically within the grid

grid-auto-columns: measurement units
This relates to the size for columns created without specific size specifications 

grid-auto-rows: measurement units
This relates to the size for rows created without specific size specifications 

Grid properties for items (child)
grid-column: column position /* E.g. 1/2  */
Allows for specifying where on the grid the column is to start. 

grid-column-start: column start position 
This property determines the starting column position an item is placed on a grid. 

grid-column-end: column end position 
This property determines the end column position an item is placed on a grid. 

grid-row: row position /* E.g. 1/2  */
Allows for specifying where on the grid the row is to start. 

grid-row-start: row start position 
This property determines the starting row position an item is placed on a grid. 

grid-row-end: row end position 
This property determines the end row position an item is placed on a grid. 

Gap
grid-gap: measurement units
Determines the gap between rows and columns 

grid-column-gap: measurement units
Determines the gap between columns

grid-row-gap: m-unit-1  m-unit-2
Determines the gap between columns

------------------
selector{
    display: grid; /* or inline-grid */
}
Grid shorthand consists of the following properties with default values:

grid
A grid will allow you organize the various elements on your page. 

grid-template-rows: none
This feature allows you configure your elements so that they are organized similarly to rows on a table. 

grid-template-columns: none

This feature allows you configure your elements but with this setting the elements are organized like columns on a table. 

grid-template-areas: none
This feature allows you configure the names of a grid and how they sit in relation to one another. 

grid-auto-rows: auto
Default setting for all row sizes that have not been explicitly configured. 

grid-auto-columns: auto
Default setting for all column sizes that have not been explicitly configured. 

grid-auto-flow: row
Default location for rows that are not explicitly allocated. 

column-gap: normal
This sets the gap between the columns

row-gap: normal
This sets the gap between the rows

Grid properties for container
grid-template-columns: measurement units | % units |repeat()
Defines the line names, and maintains a constant size of column items. Can accept a range of different measurement sizes.

grid-template-rows: measurement units | % units |repeat()
Defines the line names, and maintains a constant size of rows. Can accept a range of different measurement sizes.

grid-auto-columns: measurement unit (fixed value for all columns)
Determines the default size for columns that have not been explicitly configured. 

grid-auto-rows: measurement unit (fixed value for all rows)
Determines the default size for rows that have not been explicitly configured.

grid-template: “header header” auto
This allows you define and maintain named cells on a grid 

“main right” 75vh
This defines two cells named main and right, that have a sizing of 75% of the viewport height. 

“footer footer” 20rem
This defines two cells named footer and footer, that have a sizing of 20 root em (rem). This defines the size in relation to the html font size. 

------------------
