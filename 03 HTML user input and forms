Form validation: 
Input data is valid
Client side validation: Client-side validation checks for errors as soon as they are typed into the form. This is done by the web browser or by JavaScript code, and provide the user with immediate feedback. if there are errors, an error message will alert the user of the invalid data and how to change it for successful submission. For example, you decide to use the input element with its type attributes set to email. If the user does not enter a valid email address, the web browser will display an error message informing them that the data they entered is not a valid email address 
Server side validation:  checks for errors after the data has been submitted to the web server. Server-side validation is more secure because it prevents malicious users from tampering with your website's code and submitting invalid data to your server. When the form data is received by the web server, the backend will validate the data before processing it. This validation can run more complex checks, such as checking the data against a database, or validating the data against business requirements. Most websites use both client-side and server-side validation to provide immediate feedback to users, but also to protect against malicious data submission and to ensure data integrity

Input types

<input type="button">
<input type="checkbox" id="vehicle3" name="vehicle3" value="Boat">
 Checkboxes let a user select ZERO or MORE options of a limited number of choices.
  <input type="color" id="favcolor" name="favcolor">  is used for input fields that should contain a color.
  <input type="date" id="birthday" name="birthday">
  <input type="datetime-local" id="birthdaytime" name="birthdaytime">  specifies a date and time input field, with no time zone. Depending on browser support, a date picker can show up in the input field.
<input type="email"> Depending on browser support, the e-mail address can be automatically validated when submitted. Some smartphones recognize the email type, and add ".com" to the keyboard to match email input.
  <input type="file" id="myfile" name="myfile"> defines a file-select field and a "Browse" button for file uploads.
  <input type="hidden" id="custId" name="custId" value="3487">  defines a hidden input field (not visible to a user). A hidden field lets web developers include data that cannot be seen or modified by users when a form is submitted. A hidden field often stores what database record that needs to be updated when the form is submitted. Note: While the value is not displayed to the user in the page's content, it is visible (and can be edited) using any browser's developer tools or "View Source" functionality. Do not use hidden inputs as a form of security!
<input type="image" src="img_submit.gif" alt="Submit" width="48" height="48"> defines an image as a submit button. The path to the image is specified in the src attribute.
<input type="month">
  <input type="number" id="quantity" name="quantity" min="1" max="5"> You can also set restrictions on what numbers are accepted. The following example displays a numeric input field, where you can enter a value from 1 to 5:
  <input type="password" id="pwd" name="pwd">
  <input type="radio" id="css" name="fav_language" value="CSS">  Radio buttons let a user select ONLY ONE of a limited number of choices:
  <input type="range" id="vol" name="vol" min="0" max="50">
<input type="reset" value="Reset">
  <input type="search" id="gsearch" name="gsearch"> is used for search fields (a search field behaves like a regular text field).
  <input type="submit" value="Submit"> defines a button for submitting form data to a form-handler. The form-handler is typically a server page with a script for processing input data. The form-handler is specified in the form's action attribute:
<input type="tel" id="phone" name="phone" pattern="[0-9]{3}-[0-9]{2}-[0-9]{3}">
<input type="text" id="lname" name="lname"> defines a single-line text input field:
  <input type="time" id="appt" name="appt">
  <input type="url" id="homepage" name="homepage"> is used for input fields that should contain a URL address. Depending on browser support, the url field can be automatically validated when submitted. Some smartphones recognize the url type, and adds ".com" to the keyboard to match url input.
<input type="week">

Attribute	Description
checked	- Specifies that an input field should be pre-selected when the page loads (for type="checkbox" or type="radio")
disabled- 	Specifies that an input field should be disabled
max	-Specifies the maximum value for an input field
maxlength-	Specifies the maximum number of character for an input field
min	-Specifies the minimum value for an input field
pattern	-Specifies a regular expression to check the input value against
readonly-	Specifies that an input field is read only (cannot be changed)
required	-Specifies that an input field is required (must be filled out)
size-	Specifies the width (in characters) of an input field
step-	Specifies the legal number intervals for an input field
value-	Specifies the default value for an input field

The following example displays a numeric input field, where you can enter a value from 0 to 100, in steps of 10. The default value is 30:
<form>
  <label for="quantity">Quantity:</label>
  <input type="number" id="quantity" name="quantity" min="0" max="100" step="10" value="30">
</form>
